<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="jar" name="sebase">
  <description>
        Build the Base Framework by http://www.softenvironment.ch
	using Ant.
  </description>
  
  <!-- set global properties for this build -->
  <property name="src" value="${basedir}/src"/>
  <property name="build" value="${basedir}/build"/>
  <property name="test" value="${basedir}/test"/>
  <property name="buildnr" value="3.3.0"/>
  <property name="dist" value="${basedir}/dist"/>


	<!-- junit testing -->
			<property name="junit4" value="../junit/junit-4.10.jar"/><!-- value="ant-testutil.jar"/-->
			<property name="jfcunit" value="../jfcunit/jfcunit.jar"/>
			<property name="report.dir"   value="${build}/report"/>
			<property name="junit.out.dir.xml"  value="${report.dir}/junit/xml"/>
			<property name="junit.out.dir.html" value="${report.dir}/junit/html"/>


		<path id="classpath.run">
		        <path path="${java.class.path}"/>
				<path location="lib/ehibasics.jar" />
		        <path location="${projectjar}"/>
		</path>
		<path id="classpath.test">
		        <path refid="classpath.run"/>
		        <path location="${junit4}"/>
			    <path location="${jfcunit}"/>
		</path>

	

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <property name="projectjar" value="${build}/jar/${ant.project.name}.jar"/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/jar"/>
    <mkdir dir="${dist}"/>
  </target>

  <target depends="init" name="compile">
    <!-- Compile the java code from ${src} into ${build}/classes -->
    <mkdir dir="${build}/classes"/>
  	<!--ant inheritAll="true" antfile="../ehibasics/build.xml" target="jar"/-->
    <javac destdir="${build}/classes" includes="**/*.java" excludes="**/test/*.java"  debug="on" includeantruntime="true" encoding="UTF-8" source="6" target="1.6">
      <classpath>
        <pathelement location="lib/ehibasics.jar"/>
      </classpath>
    	<src path="${src}" />
    	<!-- <src path="${build}/src"/> -->
    </javac>
  </target>


  <target depends="init,compile" name="jar">
    <delete file="${projectjar}" quiet="true"/>

    <jar jarfile="${projectjar}">
	<fileset dir="${build}/classes" includes="**/*.class" excludes="**/test/*.class, SeBaseTestSuite.class"/>
    	<fileset dir="${src}" includes="**/*.properties"/>
    	<fileset dir="resources/de" includes="**/*.properties"/>
    	<fileset dir="resources/fr" includes="**/*.properties"/>
    	<fileset dir="resources/it" includes="**/*.properties"/>
    	<fileset dir="resources/ru" includes="**/*.properties"/>
    	<fileset dir="resources/zh" includes="**/*.properties"/>		
    	<fileset dir="${src}" includes="**/*.gif"/>
    	<fileset dir="${src}" includes="**/*.jpg"/>
    	<fileset dir="${src}" includes="**/*.png"/>
    	<fileset dir="${basedir}" includes="other/*"/>
    	<zipfileset src="lib/ehibasics.jar"/>
    </jar>
  </target>

	
	<target depends="init" name="javadocs">
	    <mkdir dir="${build}/javadoc/api"/>
	    <javadoc Public="true" Windowtitle="${ant.project.name}" destdir="${build}/javadoc/api">
	    	<sourcepath path="${src}"/>
	    </javadoc>
	  </target>
	
  <target depends="init" name="srcdist">
    <delete file="${dist}/${ant.project.name}-${buildnr}.src.zip" quiet="true"/>
    <zip zipfile="${dist}/${ant.project.name}-${buildnr}.src.zip">
    	<zipfileset dir="." prefix="${ant.project.name}-${buildnr}">
	    	<patternset includes="build.xml"/>
	    	<patternset includes="lib/**"/>
	    	<!--patternset includes="other/manifest"/-->
	    	<patternset includes="other/LICENSE.*"/>
			<patternset includes="other/README"/>
	    	<patternset includes="src/**" excludes="**/CVS/*;**/bak~/*"/>
			<patternset includes="resources/de/**/*.properties"/>
			<patternset includes="resources/fr/**/*.properties"/>
			<patternset includes="resources/it/**/*.properties"/>
			<patternset includes="resources/ru/**/*.properties"/>
			<patternset includes="resources/zh/**/*.properties"/>
    	</zipfileset>
    </zip>
  </target>
  
  <target name="clean">
    <delete dir="${build}"/>
  </target>
	
	<target depends="jar" name="compile-test">
		    <!-- Compile the java code from ${src} into ${build}/classes -->
		    <mkdir dir="${build}/classes-test"/>
		    <javac destdir="${build}/classes-test" includes="**/test/*.java" debug="on" source="6" target="1.6">
		    	<classpath refid="classpath.test" />
		    	<src path="${src}" />
		    	<src path="${test}" />	    		    	
		    </javac>
		</target>
		<target name="junit" description="Runs the unit tests" depends="compile-test">
		        <delete dir="${junit.out.dir.xml}"/>
		        <mkdir  dir="${junit.out.dir.xml}"/>
		        <junit printsummary="yes" haltonfailure="no">
		            <classpath>
		            	<path refid="classpath.test"/>
		            	<path location="${build}/classes-test"/>
		        	</classpath>
		            <formatter type="xml"/>
		            <batchtest fork="no" todir="${junit.out.dir.xml}">
		                <fileset dir="${test}" includes="**/test/*.java"/>
		            </batchtest>
		        </junit>
		    </target>

			
		    <target depends="junit" name="junitreport" description="Create a report for the rest result">
		    	<delete dir="${junit.out.dir.html}"/>
		        <mkdir dir="${junit.out.dir.html}"/>
		        <junitreport todir="${junit.out.dir.html}">
		            <fileset dir="${junit.out.dir.xml}">
		                <include name="*.xml"/>
		            </fileset>
		            <report format="frames" todir="${junit.out.dir.html}"/>
		        </junitreport>
		    </target>

</project>
